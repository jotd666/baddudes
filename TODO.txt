- crash on game over (bad jump table?) not always! (from level 5 => OK)
- game over: credits screen no context load probably
- on game over, tests test_input_bit_d1 (0x0174c,0x0175c,0x07e66), then goes back to menu but intro screen trashed
- level 6/7 Y scroll swap optim: don't blit 3x horizontally, use 2x width then 1x width, optimally around the
    displayed screen (as the game will draw the tiles furter than that)
  could probably be optimized to only restore the buffers partially, not the whole width
- easy: identify devil pole spin sound id
- helicopter color not even close to the original colors... when the colors exist in global palette...
- optimize erase helicopter (2 parts)
- fix president/door colors / boss 7: bad color change

- cycle exact / auto frameskip: level 4 strange lockup  
- boss 5: locomotive wheels erase wrong
- level 6: stalactite wrong colors (used to be OK)
- level 2 front object (lamp) not displaying (used to work with level 1 objects)
- level 5: red girls missing frames
- level 4: punching enemies while kneeling: missing frame? happens on other levels too
- level 1 repair front objects (status bar showing but destroyed, debug this)
  => control word for multiplexed after lamp is not working but other sprites are also destroyed!
- level 2: climbers on the right "blink" (frame/grouping? wrong clipping?)
- end sequence should use scrolling sprites for credits: allocate huge 2x high sprite buffers
- end sequence: double buffering screen trash???

- save/load highscores
- log & rip missing sounds: breakpoint on sound not found so able to go to mame and rip it
- leave demo running: level 3 but with status bar trashed (because of 2P life), 2P mode with player 2 invisible
- knife sound has blow+man scream (hack not working there... maybe we could see if player
  has weapon... not working in 2P mode though)
 
- do a OPT_TWO_PLAYER_MODE option, ideally it would rule to have 2 versions of the game
- drop 2 player mode, use rightmost OSD sprite for real parallax in levels 4 and 6
  see if we can blit the score afterwards if 2P mode is reinstated, anyway 2P mode is
  a problem as it uses 4 more colors and it degrades sprite palette even further.

- general sprite position / scroll problem
  - truck 2: sprites & truck shifted in the end??? also happens on level 5 train, linked to general scroll shift issue
  - level 1 when ninjas arrive on truck, truck & ninjas on it drift
  - when autoscrolling in Y (level 6 and 7), can be shifted too
  - this is not 100% reproducible with cpu/cycle exact on level 6
    not happening on immediate blitter, needs to debug autoscroll in original code
	and adapt it (check_if_must_autoscroll_0dcb2,autoscroll_control_down_right_0dc42)

- group erase: not good enough: make a table to macro objects
  and their size. Only issue: re-figure out the X/Y display coords. Major advantage:
  group erase works horizontally/vertically without any other computation:
  test on level 1 first with just the player at start...
- level 7-2: sabreman (actually any generic ninja) can happen between devil pole & dragonninja:
  play without invincibility and wait for blows...
- level 3 demo: game uses 2 players, patch to use only 1 player


low priority:

- mutant karnov black color issue: conflict between truck tires and mutant karnov on palette 9
  BUT fixing karnov steals too many colors and now character trousers are not all white...
- level 7: missing heli sound but would steal 1 music channel...
- invincibility: still hit when falling on road (level 2): 
  game must not change p1_state_flags_00ffa386 must remain to 0x10
- compare US & japan ROMS see what are the differences: there are A LOT!
- middle lower OSD missing timeout char on "CONTINUE"
- if TOTAL_CHIP_MEMORY_SIZE = 1250000, train level loads but background is trashed
  and memory manager doesn't detect any issue...
- still not restored black color ex: tile 4ae/02 (sword level 5)
- bosses 2, 5, 6: rework sheets to change white by some other color that doesn't
  conflict with main character (0xEEE => ????) so dynamic color change works fully
- restore buffer memory size optimize:
RESTORE_SCREEN_PLANE_SIZE = NB_BYTES_PER_SCREEN_ROW*3*NB_PLAYFIELD_LINES*2
could be
RESTORE_SCREEN_PLANE_SIZE = NB_BYTES_PER_SCREEN_ROW*2*NB_PLAYFIELD_LINES*2

- level 3: put water scroll in some other buffer (allocate one?) so changing plans automatically
  clips the sprites without any other side effect
- level 4: maybe remove foreground trees if possible
- level 6: same
- level 5: map tiles & fix the buggy inverted tiles
- restore buffer uses 3 horizontal playfields, they should use only 2 plus a few tiles
  to restore bobs that "wrap"
  alternative: if bob X + width wrap, clip it and perform 2 restores (but 2x as blits!)
- quantize should be improved: definitely consider color weights/frequencies
- osd_write_byte not working properly

howto:
- skip music: bpset 0df2a,D0==$1F || D0==$22  || D0==$21 || D0==$20 || D0==$27 || D0 == $2C || D0 == $26,{CURPC=$13DA;g}
- skip all but one sound: bpset 0df2a,D0!=$2F,{CURPC=$13DA;g}
- log sounds: bpset 0df2a,,{printf "%x",D0;g}

